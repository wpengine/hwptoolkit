<?php
/**
 * Event Data Transfer Object (DTO) for WPGraphQL Webhooks.
 *
 * Represents a single registered event with all necessary metadata.
 *
 * @package WPGraphQL\Webhooks\Events
 */

namespace WPGraphQL\Webhooks\Events;

/**
 * Class Event
 *
 * Encapsulates event metadata used by the event registry and dispatcher.
 */
class Event {

    /**
     * The unique name/identifier of the event.
     *
     * @var string
     */
    public string $name;

    /**
     * The WordPress hook name that triggers this event.
     *
     * @var string
     */
    public string $hookName;

    /**
     * Optional callback to generate the payload when the event fires.
     * If null, no payload is generated by default.
     *
     * @var callable|null
     */
    public $callback;

    /**
     * The priority at which the event callback should be attached.
     *
     * @var int
     */
    public int $priority;

    /**
     * The number of arguments the callback accepts.
     *
     * @var int
     */
    public int $argCount;

    /**
     * Event constructor.
     *
     * @param string        $name      Unique event name.
     * @param string        $hookName  WordPress hook name to listen to.
     * @param callable|null $callback  Optional callback to generate event payload.
     * @param int           $priority  Hook priority (default 10).
     * @param int           $argCount  Number of callback arguments (default 1).
     */
    public function __construct(
        string $name,
        string $hookName,
        ?callable $callback = null,
        int $priority = 10,
        int $argCount = 1
    ) {
        $this->name = $name;
        $this->hookName = $hookName;
        $this->callback = $callback;
        $this->priority = $priority;
        $this->argCount = $argCount;
    }
}