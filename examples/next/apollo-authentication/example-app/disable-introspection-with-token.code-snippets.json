{
  "generator": "Code Snippets v3.6.8",
  "date_created": "2025-03-06 10:59",
  "snippets": [
    {
      "id": 8,
      "name": "disable-introspection-with-token",
      "code": "use WPGraphQL\\Server\\ValidationRules\\DisableIntrospection as BaseDisableIntrospection;\n\nadd_filter('graphql_introspection_token', function () {\n    return 'your-secure-introspection-token'; // PLEASE CHANGE ME!!!\n});\n\n/**\n * Class DisableIntrospectionRule\n *\n * Custom rule to disable GraphQL introspection unless a valid token is provided.\n */\nclass DisableIntrospectionRule extends BaseDisableIntrospection {\n    public function __construct() {\n        // Register the custom validation rule.\n        add_filter('graphql_validation_rules', [$this, 'add_custom_validation_rule']);\n    }\n\n    /**\n     * Adds the custom validation rule for disabling introspection.\n     *\n     * @param array $rules Existing validation rules.\n     * @return array Modified validation rules.\n     */\n    public function add_custom_validation_rule(array $rules): array {\n        $rules['disable_introspection'] = $this;\n        return $rules;\n    }\n\n    /**\n     * Determines if the introspection should be disabled.\n     *\n     * @return bool True if introspection should be disabled, false otherwise.\n     */\n    public function isEnabled(): bool {\n        // Check if introspection is already allowed by parent rules\n        $is_rule_enabled = parent::isEnabled();\n\n        // If introspection is already allowed, there is no need for further checks\n        if (!$is_rule_enabled) {\n            return false;\n        }\n\n        // Retrieve the authorization header\n        $introspection_token_header = isset($_SERVER['HTTP_AUTHORIZATION']) \n            ? sanitize_text_field($_SERVER['HTTP_AUTHORIZATION']) \n            : '';\n        // If no token is provided, keep introspection disabled\n        if (empty($introspection_token_header)) {\n            return true;\n        }\n\n        // Retrieve the stored introspection token\n        $introspection_token = apply_filters('graphql_introspection_token', '');\n\n        // If no token is configured, keep introspection disabled\n        if (empty($introspection_token)) {\n            return true;\n        }\n\n        // Compare the provided token with the stored token\n        return !hash_equals($introspection_token_header, $introspection_token);\n    }\n}\n\n// Initialize the custom validation rule\nnew DisableIntrospectionRule();",
      "active": true,
      "modified": "2025-03-06 10:59:20",
      "revision": "10"
    }
  ]
}