name: Pre-release Tag

on:
  push:
    branches:
      - main
    paths:
      - "plugins/**"

jobs:
  tag-pre-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, json, zip

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18.x

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      - name: Get changed plugin directory
        id: plugin
        run: |
          git fetch --prune --unshallow || true
          plugin=$(git diff --name-only HEAD~1 HEAD | grep '^plugins/' | head -1 | cut -d/ -f2)
          echo "plugin_slug=$plugin" >> $GITHUB_OUTPUT

      - name: Read package metadata
        id: metadata
        run: |
          PLUGIN_DIR="plugins/${{ steps.plugin.outputs.plugin_slug }}"
          package_name=$(jq -r '.name // empty' "$PLUGIN_DIR/package.json")
          package_version=$(jq -r '.version // empty' "$PLUGIN_DIR/package.json")

          if [ -z "$package_name" ] || [ -z "$package_version" ]; then
              echo "Missing name or version in $PLUGIN_DIR/package.json"
              exit 1
          fi

          echo "package_name=$package_name" >> $GITHUB_OUTPUT
          echo "package_version=$package_version" >> $GITHUB_OUTPUT
          echo "PLUGIN_DIR=$PLUGIN_DIR" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=${package_name}-${package_version}.zip" >> $GITHUB_ENV

      - name: Create Git tag
        run: |
          TAG_NAME="${{ steps.metadata.outputs.package_name }}-${{ steps.metadata.outputs.package_version }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "$TAG_NAME"
          git push origin "$TAG_NAME"

      - name: Run composer install
        working-directory: ${{ env.PLUGIN_DIR }}
        run: composer install --no-dev --optimize-autoloader

      - name: Create plugin archive
        working-directory: ${{ env.PLUGIN_DIR }}
        run: |
          mkdir -p plugin-build
          composer archive -vvv --format=zip --file="plugin-build/${{ steps.plugin.outputs.plugin_slug }}" --dir="."

      - name: Upload archive to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.metadata.outputs.package_name }}-${{ steps.metadata.outputs.package_version }}
          name: "Pre-release ${{ steps.metadata.outputs.package_version }} for ${{ steps.metadata.outputs.package_name }}"
          prerelease: true
          files: ${{ env.PLUGIN_DIR }}/plugin-build/${{ steps.plugin.outputs.plugin_slug }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Delete .changeset files
        run: |
          find .changeset -type f -name "*.md" -delete

      - name: Commit deletion of changeset files
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add .changeset
          git commit -m "chore: cleanup changeset files after pre-release" || echo "No changes to commit"
          git push
